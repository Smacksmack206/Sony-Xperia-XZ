#!/system/bin/sh
# Copyright Cedric De'Shawn Vallieu (c) 2017, The Linux Foundation. All rights reserved.
# This program is free software; you can redistribute it and/or modify 
# it under the terms of the GNU General Public License version 2 and 
# only version 2 as published by the Free Software Foundation. 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty 
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
# See the GNU General Public License for more details.
#Settings By: Smacksmack206
#Device: Xperia XZ
#Codename: Deeznuts
#Build Status: Stable
#Last Updated: 7/16/2017
#Notes: THIS IS THE BEST THUS FAR
#TWEAKS_BEGIN
echo ""
echo '*************************'
echo "PSA:"
echo "this governor has standed the test of time"
echo "can get up to 14 hrs SOT"
echo '*************************'
echo "------------------------------------------------------------"
echo "Applying 'DEEZNUTS'"
echo "Advanced Kernel Settings"
echo "------------------------------------------------------------"
echo "Settings By: smacksmack206"
echo "Device: Xperia XZ"
echo "Codename: 'Deeznuts'"
echo "Build Status: Version 9"
echo "Last Updated: 7/16/2017"
echo 
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo "Checking Android version..."
if grep -q 'ro.build.version.sdk=25' /system/build.prop; then
	echo "Android Nougat 7.1.X detected!"
	sleep 0.1
	echo "N detected... Applying proper settings"
fi
if grep -q 'ro.build.version.sdk=24' /system/build.prop; then
	echo "Android Nougat 7.0.X detected!"
	sleep 0.1
	echo "N detected... Applying proper settings"
fi
if grep -q 'ro.build.version.sdk=23' /system/build.prop; then
	echo "Android Marshmallow 6.0.1 detected!"
	sleep 0.1
	echo "MM detected... Applying proper settings"
fi
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#Apply settings to LITTLE cluster
echo "Applying settings to LITTLE Cluster..."
chmod 0755 /sys/devices/system/cpu/cpu0/core_ctl/*
echo "40" > /sys/devices/system/cpu/cpu0/core_ctl/busy_up_thres
echo "35" > /sys/devices/system/cpu/cpu0/core_ctl/busy_down_thres
echo 1 > /sys/devices/system/cpu/cpu0/core_ctl/min_cpus
chmod 0644 /sys/devices/system/cpu/cpu0/core_ctl/*
sleep 0.1
chmod 0755 /sys/devices/system/cpu/cpu0/core_ctl/*
echo "0" > /sys/devices/system/cpu/cpu0/core_ctl/busy_up_thres
echo "0" > /sys/devices/system/cpu/cpu0/core_ctl/busy_down_thres
echo 2 > /sys/devices/system/cpu/cpu0/core_ctl/min_cpus
chmod 0644 /sys/devices/system/cpu/cpu0/core_ctl/*
echo "Quickening Boot Time"
setprop ro.config.hw_quickpoweron true
#Temporarily change permissions to governor files for the LITTLE cluster to enable Interactive governor
chmod 644 /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
echo interactive > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
chmod 444 /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
#Grab Maximum Achievable Frequency for the LITTLE Cluster
#Temporarily change permissions to governor files for the Big cluster to set the maximum frequency to 1593MHz
echo "No LITTLE Cluster Overclocking detected."
echo "Applying appropriate values."
chmod 644 /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
echo 1593600 > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq     #Core 0 Maximum Frequency = 1593MHz         
chmod 644 /sys/devices/system/cpu/cpu0/cpufreq/interactive/*
echo 5099 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/timer_slack
echo 307200 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/hispeed_freq
echo 9750 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/timer_rate
chmod 644 /sys/devices/system/cpu/cpu0/cpufreq/interactive/target_loads
echo 98 307200:99 480000:56 556800:70 652800:70 729600:99 844800:01 960000:79 1036800:01 1228800:29 1478400:09 1593600:00 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/target_loads 
chmod 444 /sys/devices/system/cpu/cpu0/cpufreq/interactive/target_loads
echo 90 307200:90 480000:89 729600:99 844800:10 960000:99 1036800:01 1228800:03 1478400:00 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/above_hispeed_delay
echo 80 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/go_hispeed_load
echo 30500 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/min_sample_time
echo 0 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/max_freq_hysteresis
echo 1 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/ignore_hispeed_on_notif
echo 0 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/boost
echo 0 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/fast_ramp_down
echo 0 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/align_windows
echo 1 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/use_migration_notif
echo 0 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/use_sched_load
echo 0 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/boostpulse_duration
echo 0 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/io_is_busy
if [ -e "/sys/devices/system/cpu/cpu0/cpufreq/interactive/enable_prediction" ]; then
    chmod 644 /sys/devices/system/cpu/cpu0/cpufreq/interactive/enable_prediction
    echo 0 > /sys/devices/system/cpu/cpu0/cpufreq/interactive/enable_prediction
fi
#Apply settings to Big cluster
echo Applying settings to BIG Cluster
sleep 0.2
chmod 0755 /sys/devices/system/cpu/cpu2/core_ctl/*
echo "40" > /sys/devices/system/cpu/cpu2/core_ctl/busy_up_thres
echo "35" > /sys/devices/system/cpu/cpu2/core_ctl/busy_down_thres
echo 1 > /sys/devices/system/cpu/cpu2/core_ctl/min_cpus
chmod 0644 /sys/devices/system/cpu/cpu2/core_ctl/*
sleep 0.1
chmod 0755 /sys/devices/system/cpu/cpu2/core_ctl/*
echo "0" > /sys/devices/system/cpu/cpu2/core_ctl/busy_up_thres
echo "0" > /sys/devices/system/cpu/cpu2/core_ctl/busy_down_thres
echo 2 > /sys/devices/system/cpu/cpu2/core_ctl/min_cpus
chmod 0644 /sys/devices/system/cpu/cpu2/core_ctl/*
#Temporarily change permissions to governor files for the LITTLE cluster to enable Interactive governor
chmod 644 /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor
echo interactive > /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor
chmod 444 /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor
#Grab Maximum Achievable Frequency for the Big Cluster
#Temporarily change permissions to governor files for the Big cluster to set the maximum frequency to 2150MHz
echo No BIG Cluster Overclocking detected. 
echo "Applying appropriate values."
chmod 644 /sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq
echo 2150400 > /sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq     #Core 2 Maximum Frequency = 2150MHz         
chmod 444 /sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq
chmod 644 /sys/devices/system/cpu/cpu2/cpufreq/interactive/target_loads
echo 05 307200:99 729600:96 844800:99 940800:99 1036800:16 1401600:19 1824000:20 2150400:30 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/target_loads 
chmod 444 /sys/devices/system/cpu/cpu2/cpufreq/interactive/target_loads
chmod 644 /sys/devices/system/cpu/cpu2/cpufreq/interactive/*
#Tweak Interactive Governor
echo 4000 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/timer_slack
echo 307200 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/hispeed_freq
echo 8000 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/timer_rate
echo 35000 307200:79 729600:80 940800:99 1113600:99 1248000:96 1401600:97 1555200:19 1632000:88> /sys/devices/system/cpu/cpu2/cpufreq/interactive/above_hispeed_delay
echo 90 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/go_hispeed_load
echo 100 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/min_sample_time
echo 0 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/max_freq_hysteresis
echo 1 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/ignore_hispeed_on_notif
echo 0 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/boost
echo 1 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/fast_ramp_down
echo 0 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/align_windows
echo 1 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/use_migration_notif
echo 0 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/use_sched_load
echo 0 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/boostpulse_duration
echo 0 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/io_is_busy
if [ -e "/sys/devices/system/cpu/cpu2/cpufreq/interactive/enable_prediction" ]; then
    chmod 644 /sys/devices/system/cpu/cpu2/cpufreq/interactive/enable_prediction
    echo 0 > /sys/devices/system/cpu/cpu2/cpufreq/interactive/enable_prediction
fi
#Disable InputBoost
echo "Disabling InputBoost"
  if [ -e "/sys/module/cpu_boost/parameters/input_boost_freq" ]; then
    chmod 644 /sys/module/cpu_boost/parameters/input_boost_freq
    echo 0 > /sys/module/cpu_boost/parameters/input_boost_freq
else
    echo "*Not supported for your current Kernel*"
fi
#Disable TouchBoost
echo "Disabling TouchBoost"
    if [ -e "/sys/module/msm_performance/parameters/touchboost" ]; then
    chmod 644 /sys/module/msm_performance/parameters/touchboost
    echo 0 > /sys/module/msm_performance/parameters/touchboost
else
    echo "*Not supported for your current Kernel*"
fi
#Disable BCL
echo "Disabling BCL and Removing Perfd"
if [ -e "/sys/devices/soc/soc:qcom,bcl/mode" ]; then
echo -n disable > /sys/devices/soc/soc:qcom,bcl/mode
fi
#Disable Core Control and Disable MSM Thermal Throttling allowing for longer sustained performance
echo "Disabling Aggressive CPU Thermal Throttling"
if [ -e "/sys/module/msm_thermal/core_control/enabled" ]; then
echo 0 > /sys/module/msm_thermal/core_control/enabled
fi
if [ -e "/sys/module/msm_thermal/parameters/enabled" ]; then
echo N > /sys/module/msm_thermal/parameters/enabled
fi
#Tweak HMP Scheduler to feed the Big cluster more tasks
sleep 0.2
echo "Tweaking HMP Scheduler for correcting BIG Cluster utilization"
echo 2 > /proc/sys/kernel/sched_window_stats_policy
echo 99 > /proc/sys/kernel/sched_upmigrate
echo 05 > /proc/sys/kernel/sched_downmigrate
echo 7 > /proc/sys/kernel/sched_spill_nr_run
echo 97 > /proc/sys/kernel/sched_spill_load
echo 30 > /proc/sys/kernel/sched_init_task_load
echo 200000 > /proc/sys/kernel/sched_min_granularity_ns
echo 400000 > /proc/sys/kernel/sched_latency_ns
echo 100000 > /proc/sys/kernel/sched_wakeup_granularity_ns
if [ -e "/proc/sys/kernel/sched_heavy_task" ]; then
    echo 96 > /proc/sys/kernel/sched_heavy_task
fi
echo 7 > /proc/sys/kernel/sched_upmigrate_min_nice
echo 4 > /proc/sys/kernel/sched_ravg_hist_size
if [ -e "/proc/sys/kernel/sched_small_wakee_task_load" ]; then
	echo 15 > /proc/sys/kernel/sched_small_wakee_task_load
fi
if [ -e "/proc/sys/kernel/sched_wakeup_load_threshold" ]; then
	echo 110 > /proc/sys/kernel/sched_wakeup_load_threshold
fi
if [ -e "/proc/sys/kernel/sched_small_task" ]; then
	echo 15 > /proc/sys/kernel/sched_small_task
fi
if [ -e "/proc/sys/kernel/sched_big_waker_task_load" ]; then
	echo 33 > /proc/sys/kernel/sched_big_waker_task_load
fi
echo 950000 > /proc/sys/kernel/sched_rt_runtime_us
echo 1000000 > /proc/sys/kernel/sched_rt_period_us
if [ -e "/proc/sys/kernel/sched_migration_fixup" ]; then
	echo 1 > /proc/sys/kernel/sched_migration_fixup
fi
if [ -e "/proc/sys/kernel/sched_freq_dec_notify" ]; then
	echo 410000 > /proc/sys/kernel/sched_freq_dec_notify
fi
if [ -e "/proc/sys/kernel/sched_freq_inc_notify" ]; then
	echo 610000 > /proc/sys/kernel/sched_freq_inc_notify
fi
if [ -e "/proc/sys/kernel/sched_boost" ]; then
	echo 0 > /proc/sys/kernel/sched_boost
fi
#Tweaks for other various Settings
echo "=========================================="
echo "Tweaking other various Settings"
echo "·Memory Values"
echo '0' > /proc/sys/vm/laptop_mode
echo '65' > /proc/sys/vm/overcommit_ratio
echo '85' > /proc/sys/vm/vfs_cache_pressure
echo '20' > /proc/sys/vm/dirty_ratio
echo '10' > /proc/sys/vm/dirty_background_ratio
echo '500' > /proc/sys/vm/dirty_expire_centisecs
echo '1500' > /proc/sys/vm/dirty_writeback_centisecs
echo "8" > /proc/sys/vm/page-cluster
echo "64000" > /proc/sys/kernel/msgmni
echo "64000" > /proc/sys/kernel/msgmax
echo "10" > /proc/sys/fs/lease-break-time
echo "500,512000,64,2048" > /proc/sys/kernel/sem
echo $((1024*1024*64)) >  /sys/block/zram0/disksize
echo "Applying New Scrolling Values"
setprop ro.max.fling_velocity 13500 
setprop ro.min.fling_velocity 10000
echo "Applying I/O Scheduler"
echo sio > /sys/block/mmcblk0/queue/scheduler
echo sio >/sys/block/mmcblk1/queue/scheduler
echo 2048 > /sys/block/mmcblk0/bdi/read_ahead_kb
echo 2048 > /sys/block/mmcblk0rpmb/bdi/read_ahead_kb
echo 0 >/sys/block/mmcblk0/queue/rotational 
echo '800' > /proc/sys/kernel/random/write_wakeup_threshold 
echo '800' > /proc/sys/kernel/random/read_wakeup_threshold
echo "Applying Battery Props"
setprop power.saving.mode 1 
setprop ro.config.hw_power_saving 1 
setprop ro.config.hw_power_saving true 
setprop persist.radio.add_power_save 1
echo "Enable Low Power Mode values"
echo N > /sys/module/lpm_levels/system/pwr/cpu0/fpc-def/idle_enabled 		
echo N > /sys/module/lpm_levels/system/pwr/cpu1/fpc-def/idle_enabled 		
echo N > /sys/module/lpm_levels/system/perf/cpu2/fpc-def/idle_enabled 		
echo N > /sys/module/lpm_levels/system/perf/cpu3/fpc-def/idle_enabled 
echo "Turn off L2 GDHS"
echo 0 > /sys/module/lpm_levels/system/pwr/pwr-l2-gdhs/idle_enabled 		
echo 0 > /sys/module/lpm_levels/system/perf/perf-l2-gdhs/idle_enabled
echo "Dynamic memory bus latency"
echo N > /sys/module/lpm_levels/parameters/sleep_disabled
echo "mem_latency" >/sys/class/devfreq/soc:qcom,memlat-cpu0/governor 
echo 50 >/sys/class/devfreq/soc:qcom,memlat-cpu0/polling_interval
echo "mem_latency" >/sys/class/devfreq/soc:qcom,memlat-cpu2/governor 
echo 50 >/sys/class/devfreq/soc:qcom,memlat-cpu2/polling_interval 
echo "cpufreq" >/sys/class/devfreq/soc:qcom,mincpubw/governor 
busybox chmod 644 /sys/module/lowmemorykiller/parameters/debug_level 
busybox echo '0' > /sys/module/lowmemorykiller/parameters/debug_level 
if [ -e "/sys/module/lowmemorykiller/parameters/enable_adaptive_lmk" ]; then
	echo 1 > /sys/module/lowmemorykiller/parameters/enable_adaptive_lmk
else
	echo ' *Adaptive LMK is not present on your Kernel* '
fi
if [ -e "/sys/module/lowmemorykiller/parameters/minfree" ]; then
	echo 28769,48791,56288,73485,88182,102879 > /sys/module/lowmemorykiller/parameters/minfree
else
	echo ' *LMK cannot currently be modified on your Kernel* '
fi
echo "·TCP Values"
string=$(</proc/sys/net/ipv4/tcp_available_congestion_control);
if [[ $string == *"westwood"* ]]
then
echo westwood > /proc/sys/net/ipv4/tcp_congestion_control
else
	echo "Westwood not avilable, using Cubic"
	echo cubic > /proc/sys/net/ipv4/tcp_congestion_control 
fi
echo "Disabling Fast Dormancy"
setprop ro.fast.dormancy 0
setprop ro.ril.fast.dormancy.rule 0
echo "Edit Wifi Sleeper"
sqlite=/system/xbin/sqlite3 wifi_idle_wait=30000 
if [ -e "/sys/module/adreno_idler" ]; then
	echo 'Y' > /sys/module/adreno_idler/parameters/adreno_idler_active
	echo'10000' > /sys/module/adreno_idler/parameters/adreno_idler_idleworkload
else
	echo ' Your Kernel Does not support Adreno IDLER '
fi
#Tweaking GPU
sleep 0.1
echo "GPU Tweaking"
echo msm-adreno-tz > /sys/devices/soc/b00000.qcom,kgsl-3d0/devfreq/b00000.qcom,kgsl-3d0/governor
echo 624000000 > /sys/devices/soc/b00000.qcom,kgsl-3d0/devfreq/b00000.qcom,kgsl-3d0/max_freq
#Tune Lazyplug	
if [ -e "/sys/module/lazyplug" ]; then
	echo '1250' > /sys/module/lazyplug/parameters/cpu_nr_run_theshold
	echo '5' > /sys/module/lazyplug/parameters/cpu_nr_hysteresis
	echo '0' > /sys/module/lazyplug/parameters/nr_run_profile_sel
else
	echo ' Your Kernel Does not support Lazyplug '
fi
echo "Applying High Performance Audio"
chmod 644 /sys/module/snd_soc_wcd9xxx/parameters/impedance_detect_en 
echo 1 > /sys/module/snd_soc_wcd9xxx/parameters/impedance_detect_en 
chmod 444 /sys/module/snd_soc_wcd9xxx/parameters/impedance_detect_en 
if [ -e "/sys/module/snd_soc_wcd9330/parameters/high_perf_mode" ]; then
	echo 1 > /sys/module/snd_soc_wcd9330/parameters/high_perf_mode 
fi
echo "Applying _LLYJs HI Performance DAC voltage values"
chmod 644 /sys/module/snd_soc_wcd9335/parameters/sido_buck_svs_voltage 
echo 965 > /sys/module/snd_soc_wcd9335/parameters/sido_buck_svs_voltage 
chmod 444 /sys/module/snd_soc_wcd9335/parameters/sido_buck_svs_voltage
echo "Applying FS-TRIM"
FS_LOGFILE=/data/fstrim.log
echo "fstrim started at $( date +"%m-%d-%Y %H:%M:%S" )" | tee -a $FS_LOGFILE;
fstrim -v /cache | tee -a $FS_LOGFILE;
fstrim -v /data | tee -a $FS_LOGFILE;
echo "fstrim finished at $( date +"%m-%d-%Y %H:%M:%S" )" | tee -a $FS_LOGFILE;
echo "Disabling all wakelocks for a more Nutted effect"
echo "Disabling all wakelocks for a more Nutted effect"
chmod 644 /sys/module/wakeup/parameters/enable_si_ws
echo 0 > /sys/module/wakeup/parameters/enable_si_ws
chmod 444 /sys/module/wakeup/parameters/enable_si_ws
chmod 644 /sys/module/wakeup/parameters/enable_bluedroid_timer_ws
echo 0 > /sys/module/wakeup/parameters/enable_bluedroid_timer_ws
chmod 444 /sys/module/wakeup/parameters/enable_bluedroid_timer_ws
chmod 644 /sys/module/wakeup/parameters/enable_ipa_ws
echo 0 > /sys/module/wakeup/parameters/enable_ipa_ws
chmod 444 /sys/module/wakeup/parameters/enable_ipa_ws
chmod 644 /sys/module/wakeup/parameters/enable_netlink_ws
echo 0 > /sys/module/wakeup/parameters/enable_netlink_ws
chmod 444 /sys/module/wakeup/parameters/enable_netlink_ws
chmod 644 /sys/module/wakeup/parameters/enable_netmgr_wl_ws
echo 0 > /sys/module/wakeup/parameters/enable_netmgr_wl_ws
chmod 444 /sys/module/wakeup/parameters/enable_netmgr_wl_ws
chmod 644 /sys/module/wakeup/parameters/enable_qcom_rx_wakelock_ws
echo 0 > /sys/module/wakeup/parameters/enable_qcom_rx_wakelock_ws
chmod 444 /sys/module/wakeup/parameters/enable_qcom_rx_wakelock_ws
chmod 644 /sys/module/wakeup/parameters/enable_timerfd_ws
echo 0 > /sys/module/wakeup/parameters/enable_timerfd_ws
chmod 444 /sys/module/wakeup/parameters/enable_timerfd_ws
chmod 644 /sys/module/wakeup/parameters/enable_wlan_extscan_wl_ws
echo 0 > /sys/module/wakeup/parameters/enable_wlan_extscan_wl_ws
chmod 444 /sys/module/wakeup/parameters/enable_wlan_extscan_wl_ws
chmod 644 /sys/module/wakeup/parameters/enable_wlan_rx_wake_ws
echo 0 > /sys/module/wakeup/parameters/enable_wlan_rx_wake_ws
chmod 444 /sys/module/wakeup/parameters/enable_wlan_rx_wake_ws
chmod 644 /sys/module/wakeup/parameters/enable_wlan_wake_ws
echo 0 > /sys/module/wakeup/parameters/enable_wlan_wake_ws
chmod 444 /sys/module/wakeup/parameters/enable_wlan_wake_ws
chmod 644 /sys/module/wakeup/parameters/enable_wlan_wow_wl_ws
echo 0 > /sys/module/wakeup/parameters/enable_wlan_wow_wl_ws
chmod 444 /sys/module/wakeup/parameters/enable_wlan_wow_wl_ws
chmod 644 /sys/module/wakeup/parameters/enable_wlan_ws
echo 0 > /sys/module/wakeup/parameters/enable_wlan_ws
chmod 444 /sys/module/wakeup/parameters/enable_wlan_ws
echo "Applying google service fix..this might take a few secs"
#Google service drain fix
find /data/data/*/cache/ -depth -mindepth 1 -exec rm -Rf {} \;
find /data/data/*/*/cache/ -depth -mindepth 1 -exec rm -Rf {} \;
find /data/data/*/*/*/*/cache/ -depth -mindepth 1 -exec rm -Rf {} \;
rm -Rf /data/data/com.facebook.katana/files/video-cache/*
su -c "pm enable com.google.android.gms/.update.SystemUpdateActivity"
su -c "pm enable com.google.android.gms/.update.SystemUpdateService"
su -c "pm enable com.google.android.gms/.update.SystemUpdateService$ActiveReceiver"
su -c "pm enable com.google.android.gms/.update.SystemUpdateService$Receiver"
su -c "pm enable com.google.android.gms/.update.SystemUpdateService$SecretCodeReceiver"
su -c "pm enable com.google.android.gsf/.update.SystemUpdateActivity"
su -c "pm enable com.google.android.gsf/.update.SystemUpdatePanoActivity"
su -c "pm enable com.google.android.gsf/.update.SystemUpdateService"
su -c "pm enable com.google.android.gsf/.update.SystemUpdateService$Receiver"
su -c "pm enable com.google.android.gsf/.update.SystemUpdateService$SecretCodeReceiver"
setprop ro.com.google.networklocation 0
echo "Kill GMS"
busybox killall -9 com.google.android.gms 
busybox killall -9 com.google.android.gms.persistent 
busybox killall -9 com.google.process.gapps 
busybox killall -9 com.android.vending
echo "Killing potential services"
busybox killall -9 com.facebook.katana
busybox killall -9 com.facebook.katana:videoplayer
busybox killall -9 com.facebook.katana:notification
busybox killall -9 com.sonymobile.deviceusage
busybox killall -9 com.qualcomm.qcrilmsgtunnel
busybox killall -9 com.simalliance.openmobileapi.service
busybox killall -9 com.sonymobile.ree
busybox killall -9 com.sonymobile.intellegent.backlight
busybox killall -9 com.sonymobile.intellegent.iengine
busybox killall -9 com.sonyericsson.lockscreen.uxpnxt
busybox killall -9 org.telegram.messenger
echo "------------------------------------------------------------"
echo "'DEEZNUTS' Successfully Applied!"
echo "DEEZNUTS" > /data/system/current_profile
echo "You may now tweak them further"
echo "using EXKM or Kernel Adiutor"
echo "------------------------------------------------------------"
echo ""
echo " Done, this will be automatically closed..."
#################################################
